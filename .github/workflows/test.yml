name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  backend-tests:
    name: Backend Tests (Laravel)
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: bizly_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
          tools: composer:v2

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        working-directory: ./backend
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare Laravel Application
        working-directory: ./backend
        run: |
          cp .env.example .env.testing
          php artisan key:generate --env=testing

      - name: Set up test environment
        working-directory: ./backend
        run: |
          echo "DB_CONNECTION=mysql" >> .env.testing
          echo "DB_HOST=127.0.0.1" >> .env.testing
          echo "DB_PORT=3306" >> .env.testing
          echo "DB_DATABASE=bizly_test" >> .env.testing
          echo "DB_USERNAME=root" >> .env.testing
          echo "DB_PASSWORD=password" >> .env.testing

      - name: Run database migrations
        working-directory: ./backend
        run: php artisan migrate --env=testing --force

      - name: Run backend tests
        working-directory: ./backend
        run: composer test

  frontend-tests:
    name: Frontend Tests (Next.js)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      - name: Build application
        working-directory: ./frontend
        run: npm run build

  status-check:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.backend-tests.result }}" == "success" && "${{ needs.frontend-tests.result }}" == "success" ]]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Some tests failed:"
            echo "Backend: ${{ needs.backend-tests.result }}"
            echo "Frontend: ${{ needs.frontend-tests.result }}"
            exit 1
          fi